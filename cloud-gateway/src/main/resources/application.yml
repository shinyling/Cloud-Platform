#服务器配置
server:
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 20
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true
spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    gateway:
      discovery:
        locator:
          # 让gateway通过服务发现组件找到其他的微服务
          enabled: true
      routes:
        - id: wy  # 唯一标识，通常使用服务id
          uri: lb://wy  # 目标URL，lb代表从注册中心获取服务，lb是Load Balance的缩写
          predicates:
            # Predicate集合
            - Path=/wy/**  # 匹配转发路径
          filters:
            # Filter集合
            - StripPrefix=1  # 从第几级开始转发
        - id: platform  # 唯一标识，通常使用服务id
          uri: lb://platform  # 目标URL，lb代表从注册中心获取服务，lb是Load Balance的缩写
          predicates:
            # Predicate集合
            - Path=/platform/**  # 匹配转发路径
          filters:
            # Filter集合
            - StripPrefix=1  # 从第几级开始转发
        - id: search  # 唯一标识，通常使用服务id
          uri: lb://search  # 目标URL，lb代表从注册中心获取服务，lb是Load Balance的缩写
          predicates:
            # Predicate集合
            - Path=/search/**  # 匹配转发路径
          filters:
            # Filter集合
            - StripPrefix=1  # 从第几级开始转发
  boot:
    admin:
      client:
        instance:
          name: gateway
          prefer-ip: true
          service-url: http://localhost:8888
        enabled: true
        url: http://localhost:8103
    redis:
      host: 127.0.0.1
      password:
      port: 6379
      timeout: 10000 # 连接超时时间（毫秒）
      database: 0 # Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
      lettuce:
        pool:
          max-active: 8 # 连接池最大连接数（使用负值表示没有限制）默认 8
          max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）默认 -1
          max-idle: 8 # 连接池中的最大空闲连接默认 8
          min-idle: 0 # 连接池中的最小空闲连接默认 0
  main:
    allow-bean-definition-overriding: true
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000
logging:
  level:
    org.springframework.cloud.gateway: debug
    com.alibaba.nacos.client.naming: error
management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false
  endpoint:
    health:
      show-details: ALWAYS
security:
  basic:
    enabled: false